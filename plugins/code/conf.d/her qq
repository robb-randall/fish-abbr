vim code.fish
cd conf.d/
cd Repos/fish-modules/modules/code/
ca
code --help
atom --help
ranger
minecraft-launcher
sudo apt install ./Minecraft.deb
ls
rm -rf test/
cd ..
mkdir test
cd Downloads/
git push
git commit -m "updated readme, removed legacy code"
git add -A
atom .
vim README.md
fisher list > README.md
fisher list
git commit -m "fixed unescaped pipe, added ranger"
git status
cd fish-modules/
cd Repos/
exit
fisher update
fisher install ~/Repos/fish-modules/modules/ranger/
vim ranger.fish
mkdir conf.d
mkdir ranger
source /home/robb/.config/fish/config.fish
abbr
vim abbr.fish
cd modules/abbr/
cd abb
git commit -m "fixed moduels"
cd rvm/
cd nvm/
cd misc/
cd ../..
mkdir conf.d && mv ../init.fish mac-port.fish
cd mac-port/
mkdir conf.d && mv ../init.fish git.fish
cd git/
mkdir conf.d && mv ../init.fish flatpak.fish
cd flatpak/
mkdir conf.d && mv ../init.fish fish.fish
cd fish/
mkdir conf.d && mv ../init.fish dotnet.fish
cd dotnet/
mkdir conf.d && mv ../init.fish code.fish
cd code/
mkdir conf.d && mv ../init.fish brew.fish
cd brew/
mkdir conf.d && mv ../init.fish atom.fish
cd atom/
mv init.fish conf.d/apt.fish
mkdir conf.d && mv init.fish config.d/apt.fish
cd apt/
mv init.fish conf.d/abbr.fish
rm -rf mv/
mkdir conf.d mv init.fish config.d/abbr.fish
cd abbr/
cd modules/
cd ~/Repos/
cat fisher.fish
cd functions/
cd $__fish_config_dir
eixit
cd .
ls -la
fisher
fisher install edc/bass
rm -rf fundle/
fisher install ~/Repos/fish-modules/modules/rvm/
fisher install ~/Repos/fish-modules/modules/nvm/
fisher install ~/Repos/fish-modules/modules/misc/
fisher install ~/Repos/fish-modules/modules/git/
fisher install ~/Repos/fish-modules/modules/flatpak/
fisher install ~/Repos/fish-modules/modules/fish/
fisher install ~/Repos/fish-modules/modules/dotnet/
fisher install ~/Repos/fish-modules/modules/code/
fisher install ~/Repos/fish-modules/modules/atom/
fisher install ~/Repos/fish-modules/modules/apt/
fisher install ~/Repos/fish-modules/modules/abbr/
curl -sL https://git.io/fisher | source && fisher install jorgebucaran/fisher
vim config.fish
rm -rf fundle.fish
cd completions/
rm conf.d/abbr.conf
ls conf.d/
cat conf.d/
rm fundle.fish
cd fun
git commit -m "added modules"
vim init.fish
mkdir abbr
mkdir fish
mkdir code
mkdir mac-port
mkdir brew
mv ataom atom
mkdir ataom
rm -rf init.fish/
mkdir init.fish
cd modules/flatpak/
mv fish-abbr/ fish-modules
rm -rf ~/Repos/fish-misc/
mv ~/Repos/fish-misc/functions/ .
cp ~/Repos/fish-misc/functions/
mkdir misc
ls ~/Repos/fish-misc/functions/
ls ~/Repos/fish-misc/
ls ~/Repos/
rm -rf ~/Repos/fish-flatpak/
ls ~/Repos/fish-flatpak/
mv ~/Repos/fish-flatpak/functions/ .
mkdir flatpak
rm -rf ~/Repos/fish-dotnet/
mv ~/Repos/fish-dotnet/conf.d/dotnet.fish init.fish
mkdir dotnet
rm -rf ~/Repos/fish-rvm/
rm -rf ~/Repos/fish-nvm/
mv ~/Repos/fish-nvm/functions/ .
mv ~/Repos/fish-nvm/README.md .
mkdir nvm
mv ~/Repos/fish-rvm/functions/ .
mv ~/Repos/fish-rvm/README.md .
cd rvm
mkdir rvm
mv git/ modules/
mv apt/ modules/
mkdir modules
cd Repos/fish-abbr/
cd
cd .config/fish
cd fish-abbr/
cd fundle/
fundle install
source config.fish
fundle update
pwd
cd $_fish_config_dir
vim $__fish_config_dir/config.fish
flipper
fundle init
fundle plugin 'robb-randall/fish-abbr' --path 'git'
fundle plugin 'robb-randall/fish-abbr' --path 'apt'
cat $__fish_config_dir/config.fish | grep abbr
cat $__fish_config_dir/config.fish | grep abbr-init
source $__fish_config_dir/config.fish
git commit -m "fixed abbr script"
rm -rf conf.d/
mv conf.d/apt.abbr init.fish
cd $$__fish_config_dir
cd robb-randall/
cd /home/robb/.config/fish
cd -
git commit -m "removed"
mv functions/ functions.old
for a in (abbr --list)
        # TODO: Add debuggin/quiet
        #echo "Erasing '$a'"
        abbr --erase $a
    end
cat fundle/robb-randall/fish-abbr/functions/fish_abbr_loader.fish
git commit -m "added git"
abbr | grep git | uniq |sort >> apt.abbr
mkdir git
fundle list
fundle
git commit -m "added apt"
cat apt.abbr
abbr | grep apt | uniq |sort >> apt.abbr
abbr | grep apt | uniq |sort
abbr --list
apt list
abbr --list | grep apt | sort
vim apt.abbr
touch apt.abbr
mkdir apt
man tee
tee --help
sudo apt autoremove
sudo apt dist-upgrade
sudo apt update
sudo apt install dmenu rofi i3
rxit
flatpak update
fou
vim conf.d/abbr.conf
sudo apt install ranger
apt search ranger
git push --set-upstream origin (git branch --show-current)
git commit -m "updated"
git checkout -b testing_2022-04-01
sudo apt install dmenu
sudo make install
make
sudo apt install
sudo apt install  libxinerama-dev
apt search xinerama
mak
sudo apt install libxft-dev
apt search xft
sudo apt install libx11-xcb-dev
apt search libx11
apt search xlib11
apt search xlib
cd dwm/
git clone https://git.suckless.org/dwm
mkdir suckless
apt search dwm
apt list wayl\*
apt list xorg\*
apt list xorg*
apt list --help
npm start
cd ../resume/
npm install gh-pages --save-dev
npx create-react-app .
mkdir resume
cd my-app/
d
vim treeview2.rb
./treeview2.rb
./treeview.rb
cd samples/
cd mrdialog/
git clone https://github.com/muquit/mrdialog.git
./test.rb
gem install mrdialog
vim test.rb
chmod +x test.rb
touch test.rb
cd /tmp/
rm -rf directory-surfer/
./ds.py
tree
chmod +x ds.py
cd src/
sudo apt install python3-dialog
apt search dialog
dialog
cd directory-surfer/
git clone git@github.com:robb-randall/directory-surfer.git
:q
q
M!
!
mc
sudo apt install mc
apt info mc
apt list mc
apt search mc
fundle clean
rm -rf fundle/tuvistavie/
1
2
git fetch --prune
git pull --all
git checkout main
git commit -m "added fastdir"
rm -rf test
git commit -m "added mkdir"
mv take.fish mkdir.fish
vim take.fish
touch take.fish
cd Repos/fish-misc/functions/
fu
git commit -m "added example config"
mv abbr.conf example.conf
cp $__fish_config_dir/conf.d/abbr.conf .
git commit -m "refactored to use fundle"
fish_reload_config
git commit -m "removed functions"
cd ../functions/
cd ../fun
echo $PATH
git commit -m "added readme"
cd ../fish-rvm/
cd fish-nvm/
cat $__fish_config_dir/config.fish
cd fish-dotnet/
cd app/
cd .var/
rm -rf .zshrc .zlogin .bashrc .bash_profile .dmrc .mkshrc .profile
rm -rf .rbenv
git commit -m "inital commit"
mv functions/ conf.d
mv dotnet.fish functions/
mv $__fish_config_dir/conf.d/dotnet.fish .
mkdir functions
git clone git@github.com:robb-randall/fish-dotnet.git
fish install
mv $__fish_config_dir/functions/fish_switch.fish .
mv $__fish_config_dir/functions/fish_reload_config.fish .
mv $__fish_config_dir/functions/!!.fish .
cd fish-misc/
git clone git@github.com:robb-randall/fish-misc.git
rm -rf fish-mac/
rm fish-mac/
s!!
apt upgrade
sudo source
!!
cd fish-mac/
git clone git@github.com:robb-randall/fish-mac.git
mv $__fish_config_dir/functions/fish_abbr_stats.fish .
mv fish-abbr-loader/ fish-abbr
git pull
cd fish-abbr-loader/
source $__fish_config_dir/fish.conf
mv $__fish_config_dir/functions/flatpak.fish .
cd fish-flatpak/
git clone git@github.com:robb-randall/fish-flatpak.git
ruby --version
node --version
nvm --version
rvm --version
mv rvm.fish functions/
rm $__fish_config_dir/functions/rvm.fish
cp $__fish_config_dir/functions/rvm.fish .
cd fish-rvm/
gip
rm $__fish_config_dir/functions/nvm*
cp $__fish_config_dir/functions/nvm* .
git clone git@github.com:robb-randall/fish-rvm.git
git clone git@github.com:robb-randall/fish-nvm.git
rm -rf fish-fish/
rm fish-fish
rm -rf fish-dotnet/ fish-flatpak/ fish-nvm/ fish-rvm/
mkdir fish-misc
mkdir fish-flatpak
mkdir fish-rvm
mkdir fish-nvm
mkdir fish-dotnet
mv fish-abbr-fish/ fish-fish
mv fish-abbr-fish/
mkdir fish-abbr-fish
rm -rf bass/
rm -rf fish-config
git commit -m "refactored"
git commit -m "updated .gitignore"
git checkout -b testing_2022-03-30_2
nvm
rvm --help
rvm --status
curl -L --create-dirs -o ~/.config/fish/functions/rvm.fish https://raw.github.com/lunks/fish-nuggets/master/functions/rvm.fish
nvm use default --silent
nvm --help
nvm use default --quiet
nvm use default
nvm_load
nvm list-remote
nvm list-remove
nvm current
nvm list
nvm --list
rm functions/nvm.fish
fundle plugin 'jorgebucaran/nvm.fish'

fish_abbr_loader $__fish_config_dir/abbr.conf
bass
code .
fish_abbr_loader
fish-abbr-loader $__fish_config_dir/abbr.conf
source fish_abbr_loader.fish
cd robb-randall/fish-abbr-loader/
fundle plugin 'robb-randall/fish-abbr-loader'
cd fish-
rm -rf  fish-abbr-loader2/
rm fish-abbr-loader2/
cp -r ../fish-abbr-loader2/* .
cp ../fish-abbr-loader2/* .
cd fish-abbr-loader
git clone git@github.com:robb-randall/fish-abbr-loader.git
mv fish-abbr-loader/ fish-abbr-loader2
mv fish-abbr-loader/
code fish_abbr_loader.fish
mv fish_abbr_add_from_config.fish fish_abbr_loader.fish
cp $__fish_config_dir/functions/fish_abbr_add_from_config.fish .
git clone https://github.com/robb-randall/fish-abbr-loader.git
cd bass/
cd edc/
find bass
which bass
fundle plugin 'edc/bass'
curl -sfL https://git.io/fundle-install | fish
fish_switch main
gfa
git commit
git commit -m "added .gitignore"
code .gitignore
git commit -m "fixed bugs"
mv abbr2.conf abbr.conf
rm abbr.conf
cat abbr2.conf
cat abbr.conf | sort | uniq > abbr2.conf
cat abbr.conf
vim abbr.conf
cat abbr.conf | sort | uniq > abbr.conf
cat abbr.conf | sort | uniq
cat abbr.conf | sort |unique
load_nvm
source $__fish_config_dir/functions/nvm.fish
load_rvm
abbr | grep -i -e flat
echo $FLATPAK_COLUMNS
fish_abbr_add_from_config $__fish_config_dir/abbr.conf
source functions/nvm.fish
eval ($history[1])
eval (history[1])
function
steam --help
flatpak upgrade
flatpak refresh
git commit -m "added abbr find abbr"
git commit -m "added fish abbreviation stats"
history | grep -e "^fish_reload_config" | count
history | grep -e "^reload_fish" | count
history | grep -e "^fish_switch" | count
history | grep -e "^fish_switch"
source functions/fish_abbr_stats.fish && fish_abbr_stats
history | grep -e "git push --force"
history grep -e "git push --force"
cod .
git commit -m "updated abbr.conf"
git commit -m "fixed dupes in abbr.conf"
git commit -m "added git prune alias"
git checkout -b testing_2022-03-30
git push origin main --force
git push origin main
git merge --no-ff main
git merge main
git checkout -b 2022-03-29 origin/2022-03-29
git fetch origin
git log --merge
git push --force
git commit --amend
git checkout main -- fish_variables
git checkout 2022-03-29
git push orgin main
git merge --no-ff 2022-03-29
ap
code config.fish
git commit -m "refactored abbreviations"
vim rvm.fish
vim port.fish
rm port.fish
cat port.fish
rm flatpak.fish
cat flatpak.fish
rm git.fish
cat git.fish
rm fish.fish
cat fish.fish
cat dotnet.fish
rm code.fish
cat code.fish
rm brew.fish
cat brew.fish
rm atom.fish
cat atom.fish
rm apt.fish
cat apt.fish
cat abbr.conf |sort >> abbr.conf
cat abbr.conf |sort
vim $__fish_config_dir
git commit -m "refactored the way abbreviations are loaded"
mv ~/Repos/test-fish/abbr.conf .
code fish_abbr_add_from_config.fish
mv fish_load_abbr.fish fish_abbr_add_from_config.fish
set --help
cat bass.fish
source $__fish_config_dir/functions/fish_load_abbr.fish && fish_load_abbr abbr.conf
source $__fish_config_dir/functions/fish_load_abbr.fish && fish_abbr_add_from_config abbr.conf
function --help
source $__fish_config_dir/functions/fish_reload_config.fish
code abbr.conf
abbr | sort >> abbr.conf
abbr | sort
rf
for a in (abbr --list)
echo "Erasing '$a'"
abbr --erase $a
end
abbr --help
aptitude --help
aptitude
date
cat $__fish_config_dir/conf.d/apt.fish
cd Repos/test-fish/
source fish_load_abbr.fish && fish_load_abbr test
source fish_load_abbr.fish && fish_load_abbr --conf=test
source fish_load_abbr.fish && fish_load_abbr --conf test
'abbr -e' #
#
for l in (cat abbr.conf)
abbr -ag (string split ' ' $l)
end
for l in (cat abbr.conf)
abbr -ag $l
end
for l in (cat abbr.conf)
end
for l in (cat abbr.conf)
echo (string replace -r '^([^\s]+)\s+(.*)$' 'abbr -ag $1 $2')
end
for l in (cat abbr.conf)
eval (string replace -r '^([^\s]+)\s+(.*)$' 'abbr -ag $1 $2')
end
for l in (cat abbr.conf)
set sp (string split ' ' $l)
end
for l in (cat abbr.conf)
echo (string split ' ' $l)
end
for l in (cat abbr.conf)
echo $l
end
touch abbr.conf
vim load-abbrs.fish
touch load-abbrs.fish
load-abbrs.fish
cd test-fish/
mkdir test-fish
git commit -m "added nvm"
node --versub
nvm install v17.8.0
nvm ls-remote
nvm install default
make install
git clone https://github.com/edc/bass.git
git clone # ~/.config/fish/functions/nvm.fish
function nvm
  bass source ~/.nvm/nvm.sh --no-use ';' nvm $argv
end

# ~/.config/fish/functions/nvm_find_nvmrc.fish
function nvm_find_nvmrc
  bass source ~/.nvm/nvm.sh --no-use ';' nvm_find_nvmrc
end

# ~/.config/fish/functions/load_nvm.fish
function load_nvm --on-variable="PWD"
  set -l default_node_version (nvm version default)
  set -l node_version (nvm version)
  set -l nvmrc_path (nvm_find_nvmrc)
  if test -n "$nvmrc_path"
    set -l nvmrc_node_version (nvm version (cat $nvmrc_path))
    if test "$nvmrc_node_version" = "N/A"
      nvm install (cat $nvmrc_path)
    else if test "$nvmrc_node_version" != "$node_version"
      nvm use $nvmrc_node_version
    end
  else if test "$node_version" != "$default_node_version"
    echo "Reverting to default Node version"
    nvm use default
  end
end

# ~/.config/fish/config.fish
# You must call it on initialization or listening to directory switching won't work
load_nvm
omf
bash .nvm/nvm.sh
bash --help
rm nvm.fish
apt list bass\*
apt list bass
apt search bass
mv node.fish nvm.fish
vim functions/node.fish
rm conf.d/node.fish
cd .nvm/
vim conf.d/node.fish
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
sudo rm -rf /usr/local/lib/nodejs/
bpytop
sudo apt install picard
apt search picard
node run
kite
node test
git commit -m "added node paths"
git checkout -B 2022-03-29
git checkout -b testing
npx create-react-app my-app
find /usr/local/lib/nodejs/ -maxdepth 2 -name bin
find /usr/local/lib/nodejs/ -maxdepth 1 -name bin
find -maxdepth 2 /usr/local/lib/nodejs/ -name bin
find -naxdepth 2 /usr/local/lib/nodejs/ -name bin
find -depth 2 /usr/local/lib/nodejs/ -name bin
find /usr/local/lib/nodejs/ -depth 2 -name bin
find /usr/local/lib/nodejs/ -name bin
find /usr/local/lib/nodejs/ --name bin
cd bin/
cd node-v16.14.2-linux-x64/
cd  /usr/local/lib/nodejs
which node
sudo tar -xJvf node-v16.14.2-linux-x64.tar.xz -C /usr/local/lib/nodejs/
sudo mkdir -p /usr/local/lib/nodejs
tar -fx node-v16.14.2-linux-x64.tar.xz
tar -x node-v16.14.2-linux-x64.tar.xz
cd Do
sudo apt remove nodejs npm
apt list node\* | grep installed
apt list node\*
apt list node
sudo apt remove node-js npm
sudo apt remove node npm
apt remove npm node
rm -rf test-react/
rm test-react/
cd test-react/
mkdir test-react
npx
sudo apt install evolution-plugins evolution-plugins-experimental
apt list evolution*
apt list evolution\*
apt search evolution
apt search chat | grep google
sudo apt install pidgin-gnome-keyring
apt search purple
sudo apt install pidgin-plugin-pack
apt search pidgin
apt search google | grep chat
apt search google
sudo apt remove thunderbird
sudo apt install evolution
apt info evolution
apt list evolution
sudo apt remove beets
sudo apt install clementine
apt search clementine
vim conf.d/port.fish
beet import /media/robb/Robb\ Randall/Music/
beef import /media/robb/Robb\ Randall/Music/
beet config -e
touch /media/robb/Robb\ Randall/musiclibrary.db
beet --help
b
beet config
beet
beets
sudo apt install beets
apt search beets
lsblk
top
ll
rm 2022-03-25_Pictures.tar.7z
cp -Ru /media/robb/SSG\ RANDALL/Music/* /media/robb/Robb\ Randall/Music/
mount
cp --help
copy --help
merge
clamscan --recursive=yes --infected /home
git checkout -b gitignore
vim .gitignore
touch .gitignore
git commit -m "git enhancements"
git add conf.d/git.fish
vim conf.d/git.fish
git checkout -b git_enhancement
git commit -m "flatpak enhancements"
vim conf.d/flatpak.fish
git commit -m "added flatpak command line alias functions"
source functions/flatpak.fish
cat conf.d/apt.fish
cat rvm.fish
slack --help
flatpak_app_create
source flatpak.fish
flatpak run --help
code flatpak.fish
vim flatpak.fish
function flatpak_app_create
for app in (flatpak list --app --columns=application,description)
set app_arr (string split -r -m1 ' ' $app)
end
end
function flatpak_app_create
for app in (flatpak list --app --columns=application,description)
echo (string split -r -m1 ' ' $app)
end
end
function flatpak_app_create
for app in (flatpak list --app --columns=application,description)
echo string split -r -m1 ' ' $app
end
end
function flatpak_app_create
for app in (flatpak list --app --columns=application,description)
echo $app[1][1]
end
end
function flatpak_app_create
for app in (flatpak list --app --columns=application,description)
echo $app[1]
end
end
function flatpak_app_create
for app in (flatpak list --app --columns=application,description)
echo $app
end
end
function flatpak_app_create
for app in (flatpak list --app)
echo $app
end
end
slack
flatpak list --app --columns=application,description
flatpak list --app columns=application,description
flatpak list --app
flatpak list --help
flatpak list
flatpak list --columns=application,description
qdirstat
sudo apt install qdirstat
apt search qdirstat
git commit -m "fixed fish init evaluation bug"
mv git.fish.old git.fish
cd .config/fish/conf.d/
mv git.fish git.fish.old
l
cd .config/fish/functions/
mv .config/fish/functions/!!.fish.old .config/fish/functions/!!.fish
mv .config/fish/functions/!!.fish .config/fish/functions/!!.fish.old
fish
mv !!.fish.not !!.fish
mv !!.fish !!.fish.not
fish -d debug
fish --help
fish -c
fish -C
tar -cf - Pictures/ | 7za a -si 2022-03-25_Pictures.tar.7z
sudo df -T
sudodf -T
df -T
du
afu
vim functions/!!.fish
cat config.fish
cd fish
cd .config/
echo $O
echo $0
git commit -m "added fish_switch for switching between fish-config branches"
fish_switch testing
fw main
vim conf.d/fish.fish
vim fish_switch.fish
git switch --help
vim TODO.md
git commit -m "updated git origin"
gcp
echo git push --set-upstream origin (git branch --show-current)
git branch --show-current
git branch --help
git branch
git commit -m "updated port paths"
git checkout testing
tar -cf - Pictures/ | 7za a -si 2022-03-25_Pictures-2.tar.7z
git commit -m "fixed port switch"
cd Pictures/
7z a Pictures/ 2022-03-25-Pictures
sudo apt install p7zip-full
tar -cvpf 2022-03-25-Pictures-Backup.tar Pictures/
tar -xvpf 2022-03-25-Pictures-Backup.tar Pictures/
sudo apt install gthumb
apt search bottles
apt search brew
apt search bre
git push --set-upstream origin devuan
git commit -m "added port"
sudo service ssh status
sudo service --status-all
sudo service
sudo service sshd status
service
git checkout -b devuan
git log
git commit -m "updated readme"
git commit -m "fixed typo"
pd
git commit -m "fixed spaceing"
git commit -m "added brew"
git commit -m "fixed s!!"
apt update
abbr --erase s!!
sudo fish_reload_config
apt refresh
apt get
git commit -m "added mac fix"
apt-get
apptitude
git commit -m "added mac items"
git commit -m "added !!"
sudo !!
echo $history[1]
history[1]
fish --verion
git commit -m "updated abbrs"
git commit -m "fixed spacing"
git commit -m "added abbrs"
git show
git --help
git diff
git commit -m "updated layout"
source functions/fish_reload_config.fish
basename functions/fish_reload_config.fish .fish
basename functions/fish_reload_config.fish
basename --help
basename
string match "/home/robb/.config/fish/functions/fish_right_prompt.fish" ".+[^\/]+\.fish\$"
string match "/home/robb/.config/fish/functions/fish_right_prompt.fish" "[^\/]+\.fish\$"
string match "/home/robb/.config/fish/functions/fish_right_prompt.fish" "^(.+\/)([^\.]+)(\..+)\$"
echo "test.bat" | sed 's/\.[^.]*$//'
sed 's/\.[^.]*$//' "test.bat"
reload_fish_config
rc
cat *
vim git.fish
cat conf.d/git.fish
kitty +kitten diff
kitty +kitten config
irb
cd ~/Repos/fish-config/
git commit -m "fixed program checks"
git commit -m "fixed reload function"
git pull --no-rebase
git reset --soft main
git reset --soft master
git reset soft master
find $__fish_config_dir -mindepth 2 -type f -name \*.fish | sort -z
/home/robb/.config/fish/functions/reload_fish_config.fish
find . -mindepth 2 -type f -name \*.fish | sort -z
find . -mindepth 2 -type f -name \*.fish
find . -mindepth 1 -type f -name \*.fish
find . -type f -mindepth 1 -name \*.fish
find . -type f -name \*.fish --mindepth=1
find . -type f -name \*.fish | order
find . -type f -name \*.fish | sort -z | sort
find . -type f -name \*.fish | sort -z | xargs -r0 source
xargs --help
xargs
find . -type f -name \*.fish | sort -z | reverse
find . -type f -name \*.fish | sort -z
find . -type f -name \*.fish | sort -z -r
find . -type f -name \*.fish | sort
find . -type f -name \*.fish | sort -z --reverse
find . -type f -name \*.fish | sort -zR
find . -type f -name \*.fish | sort -zr
man sort
sort --help
order
find . -type f -name \*.fish
find . -name \*.fish
find . -name .fish
for f in (ls -Rs); echo $f; end;
for f in (ls -Rl); echo $f; end;
for f in (ls -R); echo $f; end;
ls -R
find --help
find
find $__fish_config_dir -depth -name \*.fish
find $__fish_config_dir  -name \*.fish
man find
cat ~/Repos/fish-config/functions/reload_fish_config.fish
git commit -m "added program checks"
source .config/fish/functions/reload_fish_config.fish
cd ~/.config/fish
a
cd Repos/fish-config/
pws
vim fish.fish
chmod +x fish.fish
touch fish.fish
cd Templates/
vim apt.fish
source apt.fish
vim ~/.vimrc
if type -q aptm
echo ues
end
if type -q apt
echo ues
end
if type apt
echo ues
end
fish fish_variables
source fish_variables
vim fish_variables
cd fish-config/
mv fish-config/ fish
git clone git@github.com:robb-randall/fish-config.git
mv fish/ fish_old
cd .config/fish/
cd ~
for f in (find . -name \*.fish); source $f; end; echo "fish config refreshed!"
for f in (find . -name \*.fish); source $f; end;
for f in (find . -name \*.fish)
echo $f
end
tree .
echo $__fish_config_dir
vim conf.d/dotnet.fish
vim conf
grep -i -e rvm ../config.fish | sort >> rvm.fish
grep -i -e code ../config.fish | sort >> code.fish
grep -i -e git ../config.fish | sort >> git.fish
grep -i -e flatpak ../config.fish | sort >> flatpak.fish
grep -i -e apt ../config.fish | sort >> apt.fish
grep -i -e apt ../config.fish | sort
fish_config --help
git config --global user.name "Robb Randall"
git config --global user.email "robb.randall@gmail.com"
cat fish_variables
cp -R ~/.config/fish/. .
ls ~/.config/fish/
rm -rf fish-config/
mkdir fish-config
cd Metadata-Package/
cd Oracle/
git clone git@github.com:robb-randall/Oracle.git
git clone git@github.com:robb-randall/owmo.git
ar
node
sudo apt install zeal
apt search zeal
sudo apt remove devhelp
find . | grep devhelp
sudo apt install nodejs-doc
apt search node | grep doc
sudo apt install npm
apt list npm\*
apt search node
apt list ruby\* | grep dock
apt list ruby\*
apt search ruby | grep dock
sudo apt install devhelp
apt search devhelp
firefox index.html
ls index.html
cd rdoc/
cd ruby-3.1.1/
cd docs/
cd .rvm/
rvm docs generate
vim /home/robb/.config/fish/config.fish
cat .ssh/id_rsa.pub
git grep -i -e
cat .config/fish/config.fish | grep flatpak |sort
cat .config/fish/config.fish | grep git |sort
cat .config/fish/config.fish | grep apt |sort
apt list dart\*
apt search dart
apt search gnome | grep software
apt search gnome
sudo apt install atom
rm packages.atom.gpg
wget -qO- https://packagecloud.io/AtomEditor/atom/gpgkey | gpg --dearmor > packages.atom.gpg
sudo install -o root -g root -m 644 packages.atom.gpg /etc/apt/trusted.gpg.d/
lists... Done
Building depend
sudo sh -c 'echo "deb [arch=amd64] https://packagecloud.io/AtomEditor/atom/any/ any main" > /etc/apt/sources.list.d/atom.list'
wget -qO - https://packagecloud.io/AtomEditor/atom/gpgkey | sudo apt-key add -
sudo apt install  gnome-software-plugin-flatpak
sudo apt install --dry-run gnome-software-plugin-flatpak
sudo apt install --dry-run
gnome-software-plugin-flatpak
apt search flatpak
sudo apt install bpytop
wget http://dlc.openindiana.org/isos/hipster/20211031/OI-hipster-gui-20211031.iso
wget http://dlc.openindiana.org/isos/hipster/20211031/OI-hipster-minimal-20211031.usb
cd Images/
wget https://download.freebsd.org/releases/amd64/amd64/ISO-IMAGES/13.0/FreeBSD-13.0-RELEASE-amd64-bootonly.iso
vim Win7-Ultimate-License.txt
dd if=/dev/sr0 of=Win7-Ultimate.iso status=progress
umount /media/robb/GRMCULXFREO_EN_DVD
mkdir Images
sudo apt install ttf-mscorefonts-installer
apt search microsoft
sudo apt install fonts-firacode
apt search fira
apt search say
apt search mario
apt search fortune
apt search fortuen
fortune
ecit
rvm get head
gpg --keyserver hkp://keyserver.ubuntu.com --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
rvm get jead
rvm update
aar
virsh list --all
sudo adduser robb libvirt
apt search virt-m
apt search virtm
rvm install ruby-3
rvm install 3
rvm list known
rmv list-known
rvm list
rm .bash_profile .bashrc .mkshrc .profile .xsession-errors* .zlogin .zshrc
curl -sSL https://get.rvm.io | bash
\curl -sSL https://get.rvm.io | bash
gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
rm -rf .rbenv/
sudo apt remove rbenv
sudo apk remove rbenv
ruby-build
apt search ruby-build
curl -fsSL https://github.com/rbenv/rbenv-installer/raw/main/bin/rbenv-doctor | bash
rbenv install --list
cd versions/
cd shims/
git -C ~/.rbenv/plugins/ruby-build pull
rbenv rehash
rbenv commands
rbenv --help
rbvm --help
rbenv install 3.1
rbenv install -l
rbenv install -L
rbenv -L
cd .rbenv/
rbenv init
cd rbenv_tst/
mkdir rbenv_tst
sudo apt install rbenv
ri rbenv
apt search rbenv
sudo su
sudo ufw status
sudo reboot
sudo vim /etc/apt/sources.list
ssh-keygen
sudo dpkg-reconfigure ca-certificates
sudo install -o root -g root -m 644 packages.dbeaver.gpg /etc/apt/trusted.gpg.d/
wget -qO- https://dbeaver.io/debs/dbeaver.gpg.key | gpg --dearmor > packages.dbeaver.gpg
wget -qO- https://dbeaver.io/debs/dbeaver.gpg.key
wget -O - https://dbeaver.io/debs/dbeaver.gpg.key
cat dbeaver.list
cd /etc/apt/sources.list.d/
apt search discord
sudo fwupdtool upgrade
sudo fwupdtool refresh
sudo apt install fwupd-unsigned
apt search fwupd |grep unsigned
apt search fwupd-amd
apt search fwupd
apt search drivers | grep addition
sudo apt install printer-driver-cups-pdf
apt search cups | grep -i -e pdf
apt search cups | grep print
sudo fwupdtool update
fwupdtool --help
fwupdtool
fwupdmgr get-devices
sudo apt install ntp
sudo rc-update | grep clam
sudo rc-update
rc-update
sudo service clamav-daemon start
sudo service clamav start
sudo invoke-rc.d clamav-daemon start
invoke-rc.d clamav-daemon start
sudo apt install clamav clamav-daemon
steam
sudo apt install steam steam-devices
apt install steam steam-devices
sudo dpkg --add-architecture i386
apt search steam
cat /etc/apt/sources.list.d/dbeaver.list
apt search dun
sudo rc-update add ufw
sudo service ufw status
ufw status
sudo apt install kitty
sudo apt install ukui-wallpapers plasma-workspace-wallpapers
apt search wallpapers
apt search devuan
apt search background
apt search wallpaper
mkdir Repos
fish_config
flatpak install --user com.slack.Slack
flatpak search --user --columns=application,description test
sudo apt install ./zoom_amd64.deb
flatpak search --columns=application,description slack
flatpak search --columns=application,description
flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
sudo apt update
sudo apt install code
sudo apt install apt-transport-https
rm -f packages.microsoft.gpg
sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
sudo install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/
wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
sudo apt-get install wget gpg
sudo apt-get update && sudo apt-get install dbeaver-ce
echo "deb https://dbeaver.io/debs/dbeaver-ce /" | sudo tee /etc/apt/sources.list.d/dbeaver.list
wget -O - https://dbeaver.io/debs/dbeaver.gpg.key | sudo apt-key add -
./dotnet-install.sh
chmod +x dotnet-install.sh
wget https://dot.net/v1/dotnet-install.sh
cd /tmp
source .config/fish/config.fish
ef
vim .vimrc
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
sudo apt install curl
touch .vimrc
cat .dmrc
rm .profile
cat .profile
ll -la
rm .xsession-errors .bashrc .bash_history .bash_logout
vim .config/fish/config.fish
touch .hushlogin
sudo service tlp status
service tlp status
sudo apt install tlp
apt search tlp
chsh -s /usr/bin/fish
sudo apt install git fish flatpak firefox-esr chromium hexchat ufw gufw
apt search firefox
sudo apt install git fish flatpak firefox chromium hexchat ufw gufw
su
